{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pages","firstPage","className","classNames","disabled","href","onClick","map","page","active","items","length","App","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","pageFromUrl","get","perPageFromUrl","useState","setPerPage","setCurrentPage","maxItem","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","newPerPage","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"gNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,4BCGIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EAElB,OACE,qBAAIO,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CAAEC,SAAUH,IADjD,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACHL,GAIJL,EAAaD,EAAc,IAV/B,oBAiBDK,EAAMO,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YAAa,CAAEM,OAAQd,IAAgBa,IAD/D,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUT,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QAAS,WACHX,IAAgBE,GAIpBD,EAAaD,EAAc,IAV/B,wBCtDFe,EAAQxB,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEdG,EAAQiB,EAAMC,OAEPC,EAAgB,WAC3B,IAAMC,EAAWC,cACXC,EAAWC,cAEXC,EAAQ,IAAIC,gBAAgBH,EAASI,QACrCC,EAAcH,EAAMI,IAAI,SAAW,IACnCC,EAAiBL,EAAMI,IAAI,YAAc,IAE/C,EAA8BE,oBAAUD,GAAxC,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCD,oBAAUH,GAAhD,mBAAOzB,EAAP,KAAoB8B,EAApB,KAEMC,EAAU/B,EAAcD,EACxBiC,EAAYD,EAAUhC,EACtBkC,EAAWF,EAAUjC,EACvBA,EACAiC,EAEEG,EAAY,YAAOnB,EAAMoB,MAAMH,EAAWC,IAehD,OACE,sBAAK1B,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCgC,EAAY,EAD7C,cACoDC,EADpD,aAIA,sBAAK1B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOtC,EACPuC,SA5BiB,SAACC,GAC1B,IAAMC,EAAaC,OAAOF,EAAMG,OAAOL,OAEvCR,GAAYU,EAAMG,OAAOL,OACzBP,EAAe,GACfZ,EAAS,mBAAD,OAAoBsB,KAkBtB,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkBpC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAtCa,SAACY,GAClBiB,EAAejB,GACfK,EAAS,SAAD,OAAUL,EAAV,oBAA0Bd,OAuChC,6BACGmC,EAAatB,KAAI,SAAAgC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7ElCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a27620c2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n  const firstPage = currentPage === 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', { disabled: firstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={() => {\n            if (firstPage) {\n              return;\n            }\n\n            onPageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === pageCount,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCount}\n          onClick={() => {\n            if (currentPage === pageCount) {\n              return;\n            }\n\n            onPageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const query = new URLSearchParams(location.search);\n  const pageFromUrl = query.get('page') || '1';\n  const perPageFromUrl = query.get('perPage') || '5';\n\n  const [perPage, setPerPage] = useState(+perPageFromUrl);\n  const [currentPage, setCurrentPage] = useState(+pageFromUrl);\n\n  const maxItem = currentPage * perPage;\n  const firstItem = maxItem - perPage;\n  const lastItem = maxItem > total\n    ? total\n    : maxItem;\n\n  const visibleItems = [...items.slice(firstItem, lastItem)];\n\n  const selectItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = Number(event.target.value);\n\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n    navigate(`?page=1&perPage=${newPerPage}`);\n  };\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n    navigate(`?page=${page}&perPage=${perPage}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={selectItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={pageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}